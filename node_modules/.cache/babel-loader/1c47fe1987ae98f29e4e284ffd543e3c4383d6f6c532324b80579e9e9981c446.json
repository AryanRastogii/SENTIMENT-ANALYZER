{"ast":null,"code":"var _jsxFileName = \"/Users/aryanrastogi2580gmail.com/sentiment-analyzer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(\"\");\n  const handleAnalyze = async () => {\n    setError(\"\");\n    setResult(null);\n    if (!text.trim()) {\n      setError(\"Please enter some text.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"https://eequ81mkvc.execute-api.us-east-1.amazonaws.com/\",\n      // üîÅ Replace with your endpoint\n      {\n        text\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setResult(response.data.result);\n    } catch (err) {\n      setError(\"Failed to analyze sentiment.\");\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83E\\uDDE0 Serverless Sentiment Analyzer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      placeholder: \"Type something to analyze...\",\n      rows: 5,\n      cols: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAnalyze,\n      children: \"Analyze Sentiment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Sentiment: \", result.sentiment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(result.sentiment_scores, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Timestamp: \", result.timestamp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"H/mLXfHNs6bbatGZmCZdoIZqrZI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","text","setText","result","setResult","error","setError","handleAnalyze","trim","response","post","headers","data","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","rows","cols","onClick","style","color","sentiment","JSON","stringify","sentiment_scores","timestamp","_c","$RefreshReg$"],"sources":["/Users/aryanrastogi2580gmail.com/sentiment-analyzer/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  const handleAnalyze = async () => {\n    setError(\"\");\n    setResult(null);\n\n    if (!text.trim()) {\n      setError(\"Please enter some text.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\n        \"https://eequ81mkvc.execute-api.us-east-1.amazonaws.com/\", // üîÅ Replace with your endpoint\n        { text },\n        { headers: { \"Content-Type\": \"application/json\" } }\n      );\n      setResult(response.data.result);\n    } catch (err) {\n      setError(\"Failed to analyze sentiment.\");\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>üß† Serverless Sentiment Analyzer</h1>\n      <textarea\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        placeholder=\"Type something to analyze...\"\n        rows={5}\n        cols={50}\n      />\n      <br />\n      <button onClick={handleAnalyze}>Analyze Sentiment</button>\n\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n      {result && (\n        <div className=\"result-box\">\n          <h3>Sentiment: {result.sentiment}</h3>\n          <pre>{JSON.stringify(result.sentiment_scores, null, 2)}</pre>\n          <small>Timestamp: {result.timestamp}</small>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}